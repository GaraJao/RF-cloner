#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <RCSwitch.h>

#define OLED_ADDRESS 0x3C // Endere√ßo I2C do display OLED

Adafruit_SSD1306 display(128, 64, &Wire, -1);
RCSwitch mySwitch = RCSwitch();

String received_data = "";
String a_code = "";
String b_code = "";
int flag = 0;
int enterButton = 10, leftButton = 11, rightButton = 12, iPosition = 0;
bool enterPressed;


// 'navegation bar', 128x64px
const unsigned char bitmap_navegation [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xdb, 0xbf, 0xff, 0xff, 0x8f, 0x8f, 0x07, 0xf7, 0xff, 0xe1, 0xdd, 0xff, 0xff, 0xef, 0x80, 
  0x0f, 0x99, 0x3f, 0xff, 0xff, 0x8f, 0x07, 0x7f, 0xf7, 0xff, 0xf1, 0xc9, 0xff, 0xff, 0xe7, 0xc0, 
  0x0f, 0x3a, 0xa1, 0x68, 0x53, 0x8e, 0x03, 0x7c, 0x61, 0x0a, 0x71, 0xd5, 0x0b, 0x42, 0x93, 0xc0, 
  0x0e, 0x7a, 0xad, 0x6b, 0x4f, 0x8e, 0x03, 0x0d, 0xb7, 0x69, 0xf1, 0xd5, 0x6b, 0x5a, 0x79, 0xc0, 
  0x0f, 0x3b, 0xad, 0x68, 0x5f, 0x8e, 0x03, 0x7d, 0xb7, 0x0b, 0xf1, 0xdd, 0x6b, 0x42, 0xf3, 0xc0, 
  0x0f, 0x9b, 0xad, 0x6b, 0xdf, 0x8f, 0x07, 0x7d, 0xb7, 0x7b, 0xf1, 0xdd, 0x6b, 0x5e, 0xe7, 0xc0, 
  0x0f, 0xdb, 0xa1, 0x9c, 0x5f, 0x8f, 0x8f, 0x05, 0xb1, 0x8b, 0xf1, 0xdd, 0x0c, 0xe2, 0xef, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// 'bruteForce', 128x64px
const unsigned char epd_bitmap_bruteForce [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xdb, 0xbf, 0xff, 0xff, 0x8f, 0x8f, 0x07, 0xf7, 0xff, 0xe1, 0xdd, 0xff, 0xff, 0xef, 0x80, 
  0x0f, 0x99, 0x3f, 0xff, 0xff, 0x8f, 0x07, 0x7f, 0xf7, 0xff, 0xf1, 0xc9, 0xff, 0xff, 0xe7, 0xc0, 
  0x0f, 0x3a, 0xa1, 0x68, 0x53, 0x8e, 0x03, 0x7c, 0x61, 0x0a, 0x71, 0xd5, 0x0b, 0x42, 0x93, 0xc0, 
  0x0e, 0x7a, 0xad, 0x6b, 0x4f, 0x8e, 0x03, 0x0d, 0xb7, 0x69, 0xf1, 0xd5, 0x6b, 0x5a, 0x79, 0xc0, 
  0x0f, 0x3b, 0xad, 0x68, 0x5f, 0x8e, 0x03, 0x7d, 0xb7, 0x0b, 0xf1, 0xdd, 0x6b, 0x42, 0xf3, 0xc0, 
  0x0f, 0x9b, 0xad, 0x6b, 0xdf, 0x8f, 0x07, 0x7d, 0xb7, 0x7b, 0xf1, 0xdd, 0x6b, 0x5e, 0xe7, 0xc0, 
  0x0f, 0xdb, 0xa1, 0x9c, 0x5f, 0x8f, 0x8f, 0x05, 0xb1, 0x8b, 0xf1, 0xdd, 0x0c, 0xe2, 0xef, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xfe, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfd, 0xbf, 0x6e, 0x0f, 0xff, 0xfb, 0xff, 0xff, 0xf1, 0xef, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xfd, 
  0xfd, 0x7f, 0xae, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfd, 0x52, 0xae, 0xfc, 0x3b, 0xbb, 0xc7, 0x67, 0xef, 0xee, 0x1e, 0x3d, 0xe3, 0xff, 0xff, 0xfd, 
  0xfd, 0x52, 0xae, 0xfd, 0xdb, 0xbb, 0xbb, 0x5f, 0xef, 0xee, 0xed, 0xdd, 0xdd, 0xff, 0xff, 0xff, 
  0xfd, 0x7f, 0xae, 0x3d, 0xdb, 0xbb, 0xfb, 0x3f, 0xf1, 0xee, 0xef, 0xdd, 0xdf, 0xff, 0xff, 0xfd, 
  0xfd, 0xb3, 0x6e, 0xfd, 0xdb, 0xbb, 0xc3, 0x7f, 0xfe, 0xee, 0xee, 0x1d, 0xe3, 0xff, 0xff, 0xff, 
  0xfe, 0xf3, 0xde, 0xfd, 0xdb, 0xbb, 0xbb, 0x7f, 0xfe, 0xee, 0xed, 0xdd, 0xfd, 0xff, 0xff, 0xfd, 
  0xff, 0x73, 0xbe, 0xfd, 0xdd, 0x7b, 0xbb, 0x7f, 0xee, 0xee, 0xed, 0xdd, 0xdd, 0xff, 0xff, 0xff, 
  0xff, 0xf3, 0xfe, 0x0d, 0xde, 0xfb, 0xc3, 0x7f, 0xf1, 0xee, 0xee, 0x1d, 0xe3, 0xff, 0xff, 0xfd, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 
  0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 
  0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xef, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
  0xef, 0x8c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xef, 0x0c, 0x3e, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
  0xee, 0x0c, 0x1e, 0x67, 0xff, 0xff, 0x3f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xee, 0x0c, 0x1e, 0x66, 0x66, 0x66, 0x0e, 0x1f, 0xcf, 0xe1, 0xcc, 0xe1, 0xe1, 0xff, 0xff, 0xb8, 
  0xec, 0x0c, 0x0e, 0x66, 0x46, 0x67, 0x3c, 0xcf, 0xcf, 0xcc, 0xc8, 0xcc, 0xcc, 0xff, 0xff, 0xb8, 
  0xed, 0xf3, 0xee, 0x0e, 0x3e, 0x67, 0x3c, 0xcf, 0xc3, 0xcc, 0xc7, 0xcf, 0xcc, 0xff, 0xff, 0xb8, 
  0xed, 0xf3, 0xee, 0x66, 0x7e, 0x67, 0x3c, 0x0f, 0xcf, 0xcc, 0xcf, 0xcf, 0xc0, 0xff, 0xff, 0xb8, 
  0xec, 0x0c, 0x0e, 0x66, 0x7e, 0x67, 0x3c, 0xff, 0xcf, 0xcc, 0xcf, 0xcf, 0xcf, 0xff, 0xff, 0xb8, 
  0xee, 0x0c, 0x1e, 0x66, 0x7e, 0x67, 0x3c, 0xcf, 0xcf, 0xcc, 0xcf, 0xcc, 0xcc, 0xff, 0xff, 0xb8, 
  0xee, 0x0c, 0x1e, 0x0e, 0x7f, 0x0f, 0x8e, 0x1f, 0xcf, 0xe1, 0xcf, 0xe1, 0xe1, 0xff, 0xff, 0xb8, 
  0xef, 0x0c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xef, 0x8c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xef, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd
};
// 'enviar', 128x64px
const unsigned char epd_bitmap_enviar [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xdb, 0xbf, 0xff, 0xff, 0x8f, 0x8f, 0x07, 0xf7, 0xff, 0xe1, 0xdd, 0xff, 0xff, 0xef, 0x80, 
  0x0f, 0x99, 0x3f, 0xff, 0xff, 0x8f, 0x07, 0x7f, 0xf7, 0xff, 0xf1, 0xc9, 0xff, 0xff, 0xe7, 0xc0, 
  0x0f, 0x3a, 0xa1, 0x68, 0x53, 0x8e, 0x03, 0x7c, 0x61, 0x0a, 0x71, 0xd5, 0x0b, 0x42, 0x93, 0xc0, 
  0x0e, 0x7a, 0xad, 0x6b, 0x4f, 0x8e, 0x03, 0x0d, 0xb7, 0x69, 0xf1, 0xd5, 0x6b, 0x5a, 0x79, 0xc0, 
  0x0f, 0x3b, 0xad, 0x68, 0x5f, 0x8e, 0x03, 0x7d, 0xb7, 0x0b, 0xf1, 0xdd, 0x6b, 0x42, 0xf3, 0xc0, 
  0x0f, 0x9b, 0xad, 0x6b, 0xdf, 0x8f, 0x07, 0x7d, 0xb7, 0x7b, 0xf1, 0xdd, 0x6b, 0x5e, 0xe7, 0xc0, 
  0x0f, 0xdb, 0xa1, 0x9c, 0x5f, 0x8f, 0x8f, 0x05, 0xb1, 0x8b, 0xf1, 0xdd, 0x0c, 0xe2, 0xef, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0xde, 0xdf, 0x1f, 0xff, 0xfb, 0xff, 0xf8, 0xf7, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0x5e, 0xbe, 0xef, 0xff, 0xff, 0xff, 0xf7, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfd, 0x52, 0xae, 0xed, 0xdb, 0xbb, 0xb3, 0xf7, 0xf7, 0x0f, 0x1e, 0xf1, 0xff, 0xff, 0xff, 0xfd, 
  0xfd, 0x52, 0xae, 0xed, 0xdb, 0xbb, 0xaf, 0xf7, 0xf7, 0x76, 0xee, 0xee, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x5e, 0xbe, 0xed, 0xdb, 0xbb, 0x9f, 0xf8, 0xf7, 0x77, 0xee, 0xef, 0xff, 0xff, 0xff, 0xfd, 
  0xfe, 0xd2, 0xde, 0xed, 0xdb, 0xbb, 0xbf, 0xff, 0x77, 0x77, 0x0e, 0xf1, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xb3, 0x7e, 0xed, 0xdb, 0xbb, 0xbf, 0xff, 0x77, 0x76, 0xee, 0xfe, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0x73, 0xbe, 0xed, 0xdd, 0x7b, 0xbf, 0xf7, 0x77, 0x76, 0xee, 0xee, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf3, 0xff, 0x1e, 0x3e, 0xfb, 0xbf, 0xf8, 0xf7, 0x77, 0x0e, 0xf1, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 
  0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x78, 
  0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xef, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xee, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xed, 0xbf, 0x6e, 0x07, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xc3, 0xcf, 0xff, 0xff, 0x3f, 0xff, 0xb8, 
  0xed, 0x7f, 0xae, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xed, 0x52, 0xae, 0x7e, 0x0e, 0x67, 0x3c, 0x39, 0x9f, 0x9f, 0xce, 0x0f, 0x0f, 0x3c, 0x3f, 0xbf, 
  0xed, 0x52, 0xae, 0x7e, 0x66, 0x67, 0x39, 0x99, 0x1f, 0x9f, 0xce, 0x66, 0x67, 0x39, 0x9f, 0xbd, 
  0xed, 0x7f, 0xae, 0x1e, 0x66, 0x67, 0x3f, 0x98, 0xff, 0xc3, 0xce, 0x67, 0xe7, 0x39, 0xff, 0xbf, 
  0xed, 0xb3, 0x6e, 0x7e, 0x66, 0x67, 0x3c, 0x19, 0xff, 0xf9, 0xce, 0x67, 0x07, 0x3c, 0x3f, 0xbd, 
  0xee, 0xf3, 0xde, 0x7e, 0x66, 0x67, 0x39, 0x99, 0xff, 0xf9, 0xce, 0x66, 0x67, 0x3f, 0x9f, 0xbf, 
  0xef, 0x73, 0xbe, 0x7e, 0x67, 0x0f, 0x39, 0x99, 0xff, 0x99, 0xce, 0x66, 0x67, 0x39, 0x9f, 0xbd, 
  0xef, 0xf3, 0xfe, 0x06, 0x67, 0x9f, 0x3c, 0x19, 0xff, 0xc3, 0xce, 0x67, 0x07, 0x3c, 0x3f, 0xbf, 
  0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
  0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd
};
// 'ouvir', 128x64px
const unsigned char epd_bitmap_ouvir [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xdb, 0xbf, 0xff, 0xff, 0x8f, 0x8f, 0x07, 0xf7, 0xff, 0xe1, 0xdd, 0xff, 0xff, 0xef, 0x80, 
  0x0f, 0x99, 0x3f, 0xff, 0xff, 0x8f, 0x07, 0x7f, 0xf7, 0xff, 0xf1, 0xc9, 0xff, 0xff, 0xe7, 0xc0, 
  0x0f, 0x3a, 0xa1, 0x68, 0x53, 0x8e, 0x03, 0x7c, 0x61, 0x0a, 0x71, 0xd5, 0x0b, 0x42, 0x93, 0xc0, 
  0x0e, 0x7a, 0xad, 0x6b, 0x4f, 0x8e, 0x03, 0x0d, 0xb7, 0x69, 0xf1, 0xd5, 0x6b, 0x5a, 0x79, 0xc0, 
  0x0f, 0x3b, 0xad, 0x68, 0x5f, 0x8e, 0x03, 0x7d, 0xb7, 0x0b, 0xf1, 0xdd, 0x6b, 0x42, 0xf3, 0xc0, 
  0x0f, 0x9b, 0xad, 0x6b, 0xdf, 0x8f, 0x07, 0x7d, 0xb7, 0x7b, 0xf1, 0xdd, 0x6b, 0x5e, 0xe7, 0xc0, 
  0x0f, 0xdb, 0xa1, 0x9c, 0x5f, 0x8f, 0x8f, 0x05, 0xb1, 0x8b, 0xf1, 0xdd, 0x0c, 0xe2, 0xef, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 
  0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x78, 
  0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xef, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xef, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xee, 0xde, 0xdf, 0x0f, 0xff, 0xff, 0x3f, 0xff, 0xc3, 0xcf, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xb8, 
  0xef, 0x5e, 0xbe, 0x67, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb8, 
  0xed, 0x52, 0xae, 0x66, 0x66, 0x67, 0x39, 0x9f, 0x9f, 0xce, 0x0f, 0x0f, 0x3c, 0x3f, 0xff, 0xb8, 
  0xed, 0x52, 0xae, 0x66, 0x66, 0x67, 0x39, 0x1f, 0x9f, 0xce, 0x66, 0x67, 0x39, 0x9f, 0xff, 0xb8, 
  0xef, 0x5e, 0xbe, 0x66, 0x66, 0x67, 0x38, 0xff, 0xc3, 0xce, 0x67, 0xe7, 0x39, 0xff, 0xff, 0xb8, 
  0xee, 0xd2, 0xde, 0x66, 0x66, 0x67, 0x39, 0xff, 0xf9, 0xce, 0x67, 0x07, 0x3c, 0x3f, 0xff, 0xb8, 
  0xef, 0xb3, 0x7e, 0x66, 0x66, 0x67, 0x39, 0xff, 0xf9, 0xce, 0x66, 0x67, 0x3f, 0x9f, 0xff, 0xb8, 
  0xef, 0x73, 0xbe, 0x66, 0x67, 0x0f, 0x39, 0xff, 0x99, 0xce, 0x66, 0x67, 0x39, 0x9f, 0xff, 0xb8, 
  0xef, 0xf3, 0xff, 0x0f, 0x0f, 0x9f, 0x39, 0xff, 0xc3, 0xce, 0x67, 0x07, 0x3c, 0x3f, 0xff, 0xb8, 
  0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
  0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xef, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
  0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xfd, 0xbf, 0x6e, 0x0f, 0xff, 0xfb, 0xff, 0xff, 0xf1, 0xef, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 
  0xfd, 0x7f, 0xae, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xfd, 0x52, 0xae, 0xfc, 0x3b, 0xbb, 0xc7, 0x67, 0xef, 0xee, 0x1e, 0x3d, 0xe3, 0xff, 0xff, 0xff, 
  0xfd, 0x52, 0xae, 0xfd, 0xdb, 0xbb, 0xbb, 0x5f, 0xef, 0xee, 0xed, 0xdd, 0xdd, 0xff, 0xff, 0xfd, 
  0xfd, 0x7f, 0xae, 0x3d, 0xdb, 0xbb, 0xfb, 0x3f, 0xf1, 0xee, 0xef, 0xdd, 0xdf, 0xff, 0xff, 0xff, 
  0xfd, 0xb3, 0x6e, 0xfd, 0xdb, 0xbb, 0xc3, 0x7f, 0xfe, 0xee, 0xee, 0x1d, 0xe3, 0xff, 0xff, 0xfd, 
  0xfe, 0xf3, 0xde, 0xfd, 0xdb, 0xbb, 0xbb, 0x7f, 0xfe, 0xee, 0xed, 0xdd, 0xfd, 0xff, 0xff, 0xff, 
  0xff, 0x73, 0xbe, 0xfd, 0xdd, 0x7b, 0xbb, 0x7f, 0xee, 0xee, 0xed, 0xdd, 0xdd, 0xff, 0xff, 0xfd, 
  0xff, 0xf3, 0xfe, 0x0d, 0xde, 0xfb, 0xc3, 0x7f, 0xf1, 0xee, 0xee, 0x1d, 0xe3, 0xff, 0xff, 0xff, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd
};


// Array of all bitmaps for convenience. (Total bytes used to store images = 3120)
int lenHome=3;
const unsigned char* bitmap_home[3] = {
    epd_bitmap_ouvir,
    epd_bitmap_enviar,
    epd_bitmap_bruteForce
  
};




void lerDados() {
  while (mySwitch.available()) {
    received_data = mySwitch.getReceivedValue();
    mySwitch.resetAvailable();
    
    switch (flag){
    case 0:
      a_code = received_data;
      flag = 1;
      break;
    default:
      if (a_code == received_data){
        continue; // Ignora o valor repetido e continua para a pr√≥xima itera√ß√£o do loop
      }
      b_code = received_data;
      flag = 0;
      break;
    }
  }

  Serial.print("C√≥digo A = ");
  Serial.println(a_code);
  Serial.print("C√≥digo B = ");
  Serial.println(b_code);
}




void iniciarLeitura(){
  lerDados();
  


  
}


int menuPosition(int len) {
  int n = len-1;
  if(digitalRead(rightButton)==0){
    delay(200);
    iPosition++;
  }else if(digitalRead(leftButton)==0){
    delay(200);
    iPosition--;
  }
  if(iPosition>n){
    iPosition=0;
  }else if(iPosition<0){
    iPosition=n;
  }

}

bool enterStats() {
  if(digitalRead(enterButton) == 0){
  delay(250);
  enterPressed = true;
  return enterPressed;
  }

}

void drawHome(){
  menuPosition(lenHome);
  display.clearDisplay();
  display.drawBitmap(0, 0, bitmap_home[iPosition], 128, 64, SSD1306_WHITE);
  display.display();
  
}

void navegationOuvir(){
  int lenOuvir = 2;
  display.setTextSize(1);
  menuPosition(lenOuvir);
  display.drawBitmap(0, 0, bitmap_navegation, 128, 64, SSD1306_WHITE);
  display.drawRect(5, 16, 118, 36, SSD1306_WHITE);
  display.setTextColor(WHITE);

  display.setCursor(12, 55);
  display.print(" Voltar");
  display.setCursor(74, 55);
  display.print("Resetar");

  display.setTextSize(2);
  display.setCursor(11, 18);
  display.print(a_code);
  
  display.setCursor(11, 35);
  display.print(b_code);

  switch (iPosition){
    case 0: // Voltar
      display.setTextSize(1);
      display.fillRect(5, 53, 59, 16, SSD1306_WHITE);
      display.setTextColor(BLACK);
      display.setCursor(10, 55);
      display.print(" Voltar");
      break;

    default: // Resetar
      display.setTextSize(1);
      display.fillRect(64, 53, 59, 16, SSD1306_WHITE);
      display.setTextColor(BLACK);
      display.setCursor(74, 55);
      display.print("Resetar");
      
      if(enterPressed){ // reseta as vari√°veis
        a_code = "";
        b_code = "";
        enterPressed = 0;
      }

      break;
  }

  
  
}




void setup() {
  Serial.begin(9600);
  pinMode(rightButton, INPUT_PULLUP);
  pinMode(leftButton, INPUT_PULLUP);
  pinMode(enterButton, INPUT_PULLUP);
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDRESS);
  display.clearDisplay();
  display.setTextColor(WHITE);
  mySwitch.enableReceive(0);  // Receiver on interrupt 0 => that is pin #2
}

void loop() {
  while(!enterPressed){
    enterStats();
    drawHome();
  }
  enterPressed = false;
  switch (iPosition){
  case 0: // Entra em ouvir sinais
    while(!enterPressed){
      display.clearDisplay();
      enterStats();
      navegationOuvir();
      lerDados();
      display.display();
    }
    iPosition = 0;
    enterPressed = false;
    break;
  
  default:

    
    break;
  }
  
  

  display.clearDisplay();
  


}
/*
 * teste 1 C√≥digo A = 143799829
           C√≥digo B = 119195496

   teste 2 C√≥digo A = 28238280 
           C√≥digo B = 143799829

   teste 3 C√≥digo A = 224714664
           C√≥digo B = 143799845

   teste 4 C√≥digo A = 143799845
           C√≥digo B = 66417304

   teste 5 C√≥digo A = 143799845
           C√≥digo B = 255806712




    




 */
